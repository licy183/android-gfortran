name: Build Toolchain
on:
  push:
    branches:
      - master
    tags:
      - r**
  pull_request:
jobs:
  build:
    name: Build Toolchain
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@main
      with:
        path: ${{ github.workspace }}/android-gfortran
    - name: Build Toolchain
      run: |
        mkdir ~/bin
        export PATH=~/bin:$PATH
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        git config --global user.name "Your Name"
        git config --global user.email "you@example.com"
        git config --global color.ui false
        repo init -u https://android.googlesource.com/platform/manifest -b gcc
        repo sync
        repo forall -c git checkout ndk-r15-release || true
        docker run -td --rm -v $(pwd):/root/debugger --name=builder ubuntu:16.04
        _BUILDER="docker exec -t builder"
        $_BUILDER apt update
        $_BUILDER apt install -yq build-essential patch repo zlib1g-dev python python3 git m4 texinfo bison flex gcc-4.8 g++-4.8
        $_BUILDER ln -s /usr/bin/gcc-4.8 /root/debugger/gcc
        $_BUILDER ln -s /usr/bin/gcc-4.8 /root/debugger/cc
        $_BUILDER ln -s /usr/bin/g++-4.8 /root/debugger/g++
        $_BUILDER ln -s /usr/bin/g++-4.8 /root/debugger/cpp
        $_BUILDER bash -c "cd /root/debugger/toolchain/gcc; 
                          export PATH=/root/debugger:$PATH;
                          sed -i 's/c,c++/c,c++,fortran/g' build-gcc.sh;
                          patch -p1 -F 10 < ../../android-gfortran/x86.diff;
                          ./build.py --host linux;"
    - name: Waiting for debugger
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
    - name: Upload Build Archive
      uses: actions/upload-artifact@v2
      with:
        name: out-${{ github.sha }}
        path: ${{ github.workspace }}/out
  release:
    name: Create Github Release
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch archives
        uses: actions/download-artifact@v2
        with:
          path: ./
      - name: Copy archives
        run: |
          cp out-${{ github.sha }}/dist/*.tar.bz2 ./
      - name: Get checksums
        id: checksums
        run: |
          checksums=$(printf 'SHA-256:\n```\n%s\n```\n' "$(sha256sum *.tar.bz2)")
          checksums="${checksums//'%'/'%25'}"
          checksums="${checksums//$'\n'/'%0A'}"
          checksums="${checksums//$'\r'/'%0D'}"
          echo "::set-output name=checksums::$checksums"
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Publish GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "*.tar.bz2"
          file_glob: true
          release_name: "Android NDK toolchain version r15 with gfortran" 
          tag: ${{ steps.tag.outputs.tag }}
          body: ${{ steps.checksums.outputs.checksums }}
